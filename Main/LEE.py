# This contains a list of functions developed for Meldrum's NSF-OTIC projectimport pyb, machinefrom pyb import Switch, LEDimport  math, sysimport micropythonmicropython.alloc_emergency_exception_buf(100)class TWV:    """    Lee class creates an interface to Lee LHLA2431411H 3-way valves    Supported methods:      reset()      set()    """            def get_valve_configs (valve_number):        Data=list()        with open('config_valves.csv','r') as file:            for line in file:                line=line.rstrip('\r')                line=line.rstrip('\n')                Data.append(line.split(','))        return Data[valve_number][:]        def __init__(self):                # Get pin assignments from config_valves.csv on Pyboard        config_list=TWV.get_valve_configs(1)           self.name=str(config_list[1])        init_string="Configuring " + self.name        print(init_string)        pyb.delay(250)                self.ctrl1=pyb.Pin(pyb.Pin.cpu.A14, pyb.Pin.OUT_PP)        #self.ctrl1=pyb.Pin(config_list[3], pyb.Pin.OUT_PP)        self.ctrl2=pyb.Pin(config_list[4], pyb.Pin.OUT_PP)                init_string="Control-1 pin:" + config_list[3]        print(init_string)        pyb.delay(250)                init_string="Control-2 pin:" + config_list[4]        print(init_string)        pyb.delay(250)                self.ctrl1.low()        self.ctrl2.low()            def set(self, position):        if position=='C':          print("Valve set in position C")          self.ctrl1.low()          self.ctrl2.high()          pyb.delay(50)          self.ctrl1.low()          self.ctrl2.low()                  elif position=='D':          print("Valve set in position D")          self.ctrl1.high()          self.ctrl2.low()          pyb.delay(50)          self.ctrl1.low()          self.ctrl2.low()      